{"version":3,"sources":["home.js","about.js","App.js","serviceWorker.js","index.js"],"names":["IconLabelTabs","state","value","handleChange","event","_this","setState","_this$props","this","props","classes","react_default","a","createElement","Fragment","className","home","react_ui_cards","photos","price","productName","description","rating","url","React","Component","withStyles","overflowX","display","justifyContent","textAlign","alignItems","root","flexGrow","RecipeReviewCard","expanded","class","main","Card_default","card","CardHeader_default","avatar","Avatar_default","aria-label","action","IconButton_default","title","subheader","CardMedia_default","media","image","CardContent_default","Typography_default","component","theme","maxWidth","height","paddingTop","actions","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","backgroundColor","red","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","console","log","bind","assertThisInitialized","window","location","href","Paper_default","square","Tabs_default","onChange","variant","indicatorColor","textColor","Tab_default","icon","Home_default","label","Favorite_default","PersonPin_default","onClick","gotoGithub","about","Boolean","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a949c72f.chunk.js","sourcesContent":["import React from 'react';\nimport { ProductCard } from 'react-ui-cards';\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from \"@material-ui/core/es/Divider/Divider\";\n\nconst styles = {\n    home: {\n        overflowX: 'scroll',\n        display: 'flex',\n        justifyContent: 'center',\n        textAlign: 'center',\n        alignItems: 'center'\n    },\n    root: {\n        textAlign: 'center',\n        flexGrow: 1,\n    },\n};\n\nclass IconLabelTabs extends React.Component {\n    state = {\n        value: 0,\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { classes, value } = this.props;\n\n        return (\n            <React.Fragment>\n                <div className={classes.home}>\n                    <ProductCard\n                        photos={[\n                            'https://raw.githubusercontent.com/fxnoob/chrome-extensions/master/src/stgc.png'\n                        ]}\n                        price='$0'\n                        productName='STGC'\n                        description='STGC(Save to google contacts)  chrome extension that lets you directly save contacts in phone from web pages'\n                        rating={3}\n                        url='https://chrome.google.com/webstore/detail/save-to-google-contacts/ofifhemkgcbeneclidajibkcjllgmjfp'\n                    />\n                    <ProductCard\n                        photos={[\n                            'https://raw.githubusercontent.com/fxnoob/chrome-extensions/master/src/jiofi.jpeg',\n                        ]}\n                        price='$0'\n                        productName='JSCE'\n                        description='JSCE(JioFi Stats chrome extension ) - A chrome extension to get stats about Jiofi device which a PC is connected to.'\n                        rating={3}\n                        url='https://chrome.google.com/webstore/detail/jiofi-extension/ngpdiefgknbemaecamolneblgoiaiokj'\n                    />\n                    <ProductCard\n                        photos={[\n                            'https://raw.githubusercontent.com/fxnoob/chrome-extensions/master/src/history.jpg'\n                        ]}\n                        price='$0'\n                        productName='IM'\n                        description='IM (Incognito Mode) - A chrome extension to delete sensitive websites history without opening page in  incognito mode.'\n                        rating={3}\n                        url='https://chrome.google.com/webstore/detail/incognito-mode/mohhhmnkpenbolekdahofkkbdeaakdei'\n                    />\n                    <ProductCard\n                        photos={[\n                            'https://raw.githubusercontent.com/fxnoob/chrome-extensions/master/src/fs.png'\n                        ]}\n                        price='$0'\n                        productName='FS'\n                        description='FS ( Fast Input ) - Fastest way to interact with web pages on chrome browser including speech, gesture recognition'\n                        rating={3}\n                        url='https://github.com/fxnoob/fast-input'\n                    />\n                </div>\n                <div className={classes.home}>\n                    <ProductCard\n                        photos={[\n                            'https://raw.githubusercontent.com/fxnoob/chrome-extensions/master/src/phe.png'\n                        ]}\n                        price='$0'\n                        productName='PHE'\n                        description='PHE ( Paytm History Extension ) -- A chrome extension to show stats based on paytm purchase history.'\n                        rating={3}\n                        url='https://github.com/fxnoob/paytm-history-extension'\n                    />\n                    <ProductCard\n                        photos={[\n                            ''\n                        ]}\n                        price='$0'\n                        productName='LP'\n                        description='LP ( Link Preview Extension ) - A chrome extension to see link preview before even visiting the link'\n                        rating={3}\n                        url='https://github.com/fxnoob/link-preview'\n                    />\n                    <ProductCard\n                        photos={[\n                            'https://raw.githubusercontent.com/imox2/olastats-chrome-extension/master/images/ola%20stat%20medium.png?token=AF5ECHITRETXY43HDWAVQNC44KZRC'\n                        ]}\n                        price='$0'\n                        productName='OLS'\n                        description='OLS( Ola Stats ) - a chrome extension  to see stats based on ola profile. eg most frequest ride, max money spent on ride'\n                        rating={3}\n                        url='https://github.com/fxnoob/olastats-chrome-extension'\n                    />\n                    <ProductCard\n                        photos={[\n                            'https://raw.githubusercontent.com/fxnoob/chrome-extensions/master/src/jiofi.jpeg',\n                        ]}\n                        price='$0'\n                        productName='BS'\n                        description='BS( Book Search chrome extension  )- Extension that lets you search google books and it-ebooks.info books. right from popup'\n                        rating={3}\n                        url='https://chrome.google.com/webstore/detail/jiofi-extension/ngpdiefgknbemaecamolneblgoiaiokj'\n                    />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(IconLabelTabs);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport red from '@material-ui/core/colors/red';\n\nconst styles = theme => ({\n    main: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    card: {\n        maxWidth: 400,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    actions: {\n        display: 'flex',\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n});\n\nclass RecipeReviewCard extends React.Component {\n    state = { expanded: false };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div class={classes.main}>\n            <Card className={classes.card}>\n                <CardHeader\n                    avatar={\n                        <Avatar aria-label=\"Recipe\" className={classes.avatar}>\n                            HS\n                        </Avatar>\n                    }\n                    action={\n                        <IconButton>\n                            ..\n                        </IconButton>\n                    }\n                    title=\"@fxnoob\"\n                    subheader=\"Hitesh Saini\"\n                />\n                <CardMedia\n                    className={classes.media}\n                    image=\"https://avatars3.githubusercontent.com/u/24789277?s=400&v=4\"\n                    title=\"Paella dish\"\n                />\n                <CardContent>\n                    <Typography component=\"p\">\n                        This is the showcase repository of chrome extensions I made.\n                    </Typography>\n                </CardContent>\n            </Card>\n            </div>\n        );\n    }\n}\n\nRecipeReviewCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(RecipeReviewCard);\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport HomeIcon from '@material-ui/icons/Home';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport HomeComponent from './home'\nimport AboutComponent from './about'\n\nconst styles = {\n    main: {\n        display: 'flex',\n        justifyContent: 'center',\n        textAlign: 'center',\n        alignItems: 'center'\n    },\n    root: {\n        textAlign: 'center',\n        flexGrow: 1,\n        maxWidth: 500,\n    },\n};\n\nclass IconLabelTabs extends React.Component {\n    state = {\n        value: 0,\n    };\n    constructor(props) {\n        super(props)\n        this.handleChange = this.handleChange.bind(this)\n    }\n    handleChange = (event, value) => {\n        if ( value === 2)\n            return ;\n        console.log(value)\n        this.setState({ value: value });\n    };\n    gotoGithub() {\n        window.location.href = \"https://github.com/fxnoob\"\n        return false;\n    }\n    render() {\n        const { classes } = this.props;\n        const { value } = this.state;\n        return (\n            <div>\n            <div className={classes.main}>\n            <Paper square className={classes.root}>\n                <Tabs\n                    value={this.state.value}\n                    onChange={this.handleChange}\n                    variant=\"fullWidth\"\n                    indicatorColor=\"secondary\"\n                    textColor=\"secondary\"\n                >\n                    <Tab icon={<HomeIcon />} label=\"Home\" />\n                    <Tab icon={<FavoriteIcon />} label=\"About\" />\n                    <Tab icon={<PersonPinIcon />} label=\"Github\" onClick={this.gotoGithub} />\n                </Tabs>\n            </Paper>\n            </div>\n                <p>\n                    {value === 0 && <HomeComponent/>}\n                    {value === 1 && <AboutComponent/>}\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(IconLabelTabs);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}