{"version":3,"sources":["home.js","about.js","App.js","serviceWorker.js","index.js"],"names":["IconLabelTabs","state","value","handleChange","event","_this","setState","_this$props","this","props","classes","react_default","a","createElement","className","home","react_ui_cards","photos","price","productName","description","rating","url","React","Component","withStyles","overflowX","display","justifyContent","textAlign","alignItems","root","flexGrow","main","maxWidth","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","console","log","bind","assertThisInitialized","Paper_default","square","Tabs_default","onChange","variant","indicatorColor","textColor","Tab_default","icon","Home_default","label","Favorite_default","PersonPin_default","about","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b37ea721.chunk.js","sourcesContent":["import React from 'react';\r\nimport { ProductCard } from 'react-ui-cards';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n    home: {\r\n        overflowX: 'scroll',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    root: {\r\n        textAlign: 'center',\r\n        flexGrow: 1,\r\n    },\r\n};\r\n\r\nclass IconLabelTabs extends React.Component {\r\n    state = {\r\n        value: 0,\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        const { classes, value } = this.props;\r\n\r\n        return (\r\n            <div className={classes.home}>\r\n                <ProductCard\r\n                    photos={[\r\n                        'https://raw.githubusercontent.com/fxnoob/chrome-extensions/master/src/stgc.png'\r\n                    ]}\r\n                    price='$0'\r\n                    productName='STGC'\r\n                    description='STGC(Save to google contacts)  chrome extension that lets you directly save contacts in phone from web pages'\r\n                    rating={3}\r\n                    url='https://chrome.google.com/webstore/detail/save-to-google-contacts/ofifhemkgcbeneclidajibkcjllgmjfp'\r\n                />\r\n                <ProductCard\r\n                    photos={[\r\n                        'https://raw.githubusercontent.com/fxnoob/chrome-extensions/master/src/jiofi.jpeg',\r\n                    ]}\r\n                    price='$0'\r\n                    productName='JSCE'\r\n                    description='JSCE(JioFi Stats chrome extension ) - A chrome extension to get stats about Jiofi device which a PC is connected to.'\r\n                    rating={3}\r\n                    url='https://chrome.google.com/webstore/detail/jiofi-extension/ngpdiefgknbemaecamolneblgoiaiokj'\r\n                />\r\n                <ProductCard\r\n                    photos={[\r\n                        'https://raw.githubusercontent.com/fxnoob/chrome-extensions/master/src/history.jpg'\r\n                    ]}\r\n                    price='$0'\r\n                    productName='IM'\r\n                    description='IM (Incognito Mode) - A chrome extension to delete sensitive websites history without opening page in  incognito mode.'\r\n                    rating={3}\r\n                    url='https://chrome.google.com/webstore/detail/incognito-mode/mohhhmnkpenbolekdahofkkbdeaakdei'\r\n                />\r\n                <ProductCard\r\n                    photos={[\r\n                        'https://raw.githubusercontent.com/fxnoob/chrome-extensions/master/src/fs.png'\r\n                    ]}\r\n                    price='$0'\r\n                    productName='FS'\r\n                    description='FS ( Fast Input ) - Fastest way to interact with web pages on chrome browser including speech, gesture recognition'\r\n                    rating={3}\r\n                    url='https://github.com/fxnoob/fast-input'\r\n                />\r\n                <ProductCard\r\n                    photos={[\r\n                        'https://raw.githubusercontent.com/fxnoob/chrome-extensions/master/src/phe.png'\r\n                    ]}\r\n                    price='$0'\r\n                    productName='PHE'\r\n                    description='PHE ( Paytm History Extension ) - A chrome extension to show stats based on paytm purchase history.'\r\n                    rating={3}\r\n                    url='https://github.com/fxnoob/paytm-history-extension'\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(IconLabelTabs);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n    main: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    root: {\r\n        textAlign: 'center',\r\n        flexGrow: 1,\r\n        maxWidth: 500,\r\n    },\r\n};\r\n\r\nclass IconLabelTabs extends React.Component {\r\n    state = {\r\n        value: 0,\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        const { classes, value } = this.props;\r\n\r\n        return (\r\n            <div className=\"about\">\r\n               About\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(IconLabelTabs);\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\r\nimport HomeComponent from './home'\r\nimport AboutComponent from './about'\r\n\r\nconst styles = {\r\n    main: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    root: {\r\n        textAlign: 'center',\r\n        flexGrow: 1,\r\n        maxWidth: 500,\r\n    },\r\n};\r\n\r\nclass IconLabelTabs extends React.Component {\r\n    state = {\r\n        value: 0,\r\n    };\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    handleChange = (event, value) => {\r\n        console.log(value)\r\n        this.setState({ value: value });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { value } = this.state;\r\n        return (\r\n            <div>\r\n            <div className={classes.main}>\r\n            <Paper square className={classes.root}>\r\n                <Tabs\r\n                    value={this.state.value}\r\n                    onChange={this.handleChange}\r\n                    variant=\"fullWidth\"\r\n                    indicatorColor=\"secondary\"\r\n                    textColor=\"secondary\"\r\n                >\r\n                    <Tab icon={<HomeIcon />} label=\"Home\" />\r\n                    <Tab icon={<FavoriteIcon />} label=\"About\" />\r\n                    <Tab icon={<PersonPinIcon />} label=\"Github\" />\r\n                </Tabs>\r\n            </Paper>\r\n            </div>\r\n                <p>\r\n                    {value === 0 && <HomeComponent/>}\r\n                    {value === 1 && <AboutComponent/>}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(IconLabelTabs);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}